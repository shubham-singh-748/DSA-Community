/* 
1. You are given a number n, representing the number of rows.

2. You are given a number m, representing the number of columns.

3. You are given n*m numbers, representing elements of 
2d array a. The numbers can be 1 or 0 only.

4. You are standing in the top-left corner and 
have to reach the bottom-right corner. 

Only four moves are allowed 't' (1-step up), 'l' (1-step left), 
'd' (1-step down) 'r' (1-step right). You can only move to cells 
which have 0 value in them. You can't move out of the 
boundaries or in the cells which have value 1 in them (1 means obstacle)

5. Complete the body of floodfill function - without changing signature
 - to print all paths that can be used to move from top-left to bottom-right.
*/

import java.util.Scanner;

public class FloodFill {
    public static void main(String[] args) {
        try (Scanner scn = new Scanner(System.in)) {
            int rows = scn.nextInt();
            int col = scn.nextInt();

            int[][] arr = new int[rows][col];
            for(int i=0; i<arr.length; i++)
            {
                for(int j=0; j<arr[i].length; j++)
                {
                    arr[i][j] = scn.nextInt();
                }
            }

            boolean[][] visited = new boolean[rows][col];
            floodfill(arr, 0, 0, "", visited);
        }
    }
    public static void floodfill(int[][] arr, int rows, int col, 
    String asf, boolean[][] visited)
    {
        if(rows<0 || col<0 || rows==arr.length || col==arr[0].length 
        || arr[rows][col]==1 || visited[rows][col]==true)
        {
            return;
        }

        if(rows==arr.length - 1 && col==arr[0].length - 1)
        {
            System.out.println(asf);
            return;
        }

        visited[rows][col] = true;

        floodfill(arr, rows - 1, col, asf + " TOP ", visited);
        floodfill(arr, rows, col - 1, asf + " LEFT ", visited);
        floodfill(arr, rows + 1, col, asf + " DOWN ", visited);
        floodfill(arr, rows, col + 1, asf + " RIGHT ", visited);

        visited[rows][col] = false;
    }
}
