/* 
1. You are given a number n representing number of stairs in a staircase.

2. You are standing at the bottom of staircase. 
You are allowed to climb 1 step, 2 steps or 3 steps in one move.

3. Complete the body of getStairPaths function - without changing signature - 
to get the list of all paths that can be used to climb the staircase up.

Use sample input and output to take idea about output.
*/

import java.util.ArrayList;
import java.util.Scanner;

public class StairCaseRecursion {
    public static void main(String[] args) {
        try (Scanner scn = new Scanner(System.in)) {
            int n = scn.nextInt();
            System.out.println("Enter something here");
            ArrayList<String> Stairs = getStairPaths(n);
            System.out.println(Stairs);
        }
    }

    public static ArrayList<String> getStairPaths(int n)
    {
        if(n == 0)
        {
            ArrayList<String> BaseRes = new ArrayList<>();
            BaseRes.add("");
            return BaseRes;
        }
        else if(n < 0)
        {
            ArrayList<String> BaseRes = new ArrayList<>();
            return BaseRes;
        }
        ArrayList<String> path1 = getStairPaths(n-1);
        ArrayList<String> path2 = getStairPaths(n-2);
        ArrayList<String> path3 = getStairPaths(n-3);

        ArrayList<String> myRes = new ArrayList<>();

        for(String path: path1)
        {
            myRes.add(1 + path);
        }
        for(String path: path2)
        {
            myRes.add(2 + path);
        }
        for(String path: path3)
        {
            myRes.add(3 + path);
        }
        return myRes;
    }
}
