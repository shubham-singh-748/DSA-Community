Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]


#include <bits/stdc++.h>
using namespace std;

int main(int argc, char const *argv[])
{
	vector<int> nums;
	int arr[] = {0, 1, 0, 3, 12};

	for(int i=0; i<sizeof(arr)/sizeof(arr[0]); ++i)
	{
		nums.push_back(arr[i]);
	}

	int i = 0, j = 0;
	
	int n = nums.size();
	while(i < n)
	{
		if(nums[i] != 0)
		{
			int temp = nums[i];
	        nums[i] = nums[j];
	        nums[j] = temp;
			i++;
			j++;
		}
		else
		{
			i++;
		}
	}

	for(int i=0; i<sizeof(arr)/sizeof(arr[0]); ++i)
	{
		cout << nums[i] << endl;
	}
}
